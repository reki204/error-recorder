{
  "version": 3,
  "file": "Sidebar.css",
  "sources": [
    "CreatePost.svelte",
    "Search.svelte",
    "PageTitle.svelte"
  ],
  "sourcesContent": [
    "<script lang=\"ts\">import PageTitle from \"../ui/PageTitle.svelte\";\r\nimport axios from 'axios';\r\nconst postUrl = 'http://localhost:3000/api/v1/posts';\r\nlet isSubmitting = false;\r\nlet errorTitle;\r\nlet errorSourceCode;\r\nlet errorSolutionCode;\r\nlet lang;\r\nexport const handleSubmit = () => {\r\n    isSubmitting = true;\r\n    // request body\r\n    const postErrorData = {\r\n        error_title: errorTitle,\r\n        solution_code: errorSourceCode,\r\n        source_code: errorSolutionCode,\r\n        lang: lang\r\n        // \"error_title\": errorTitle,\r\n        // \"solution_code\": errorSourceCode,\r\n        // \"source_code\": errorSolutionCode,\r\n        // \"lang\": lang\r\n    };\r\n    const toData = errorCodeToJson(postErrorData);\r\n    console.log(toData);\r\n    postAxios(postUrl, toData);\r\n    // console.log(postErrorData);\r\n    // new PostErrorInfo(postUrl, postErrorData);\r\n    setTimeout(() => {\r\n        isSubmitting = false;\r\n    }, 1000);\r\n};\r\nfunction errorCodeToJson(obj) {\r\n    return JSON.stringify(obj);\r\n}\r\n;\r\nfunction postAxios(url, obj) {\r\n    axios.post(url, obj, {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n    }).then(res => {\r\n        console.log(res.data);\r\n    }).catch(err => {\r\n        console.log(\"err:\", err);\r\n    });\r\n}\r\n;\r\nexport class PostErrorInfo {\r\n    // eslint-disable-next-line @typescript-eslint/naming-convention\r\n    constructor(postUrl, Obj) {\r\n        this.postUrl = postUrl;\r\n        this.Obj = Obj;\r\n        this.postUrl = postUrl;\r\n        this.postObj = this.errorCodeToJson(Obj);\r\n        this.postServer();\r\n    }\r\n    ;\r\n    // convert postData to json\r\n    errorCodeToJson(obj) {\r\n        return JSON.stringify(obj);\r\n    }\r\n    ;\r\n    async postServer() {\r\n        await axios.post(this.postUrl, this.postObj)\r\n            .then(res => {\r\n            console.log(res.data);\r\n        })\r\n            .catch(err => {\r\n            console.log(\"err:\", err);\r\n        });\r\n    }\r\n    ;\r\n}\r\n;\r\n</script>\n\n<div>\n    <PageTitle title=\"エラーポストを作成\" />\n    <div class=\"post-form\">\n        <form on:submit|preventDefault={handleSubmit}>\n            <!-- svelte-ignore a11y-autofocus -->\n            <input\n                id=\"error-title\"\n                class=\"post-input\"\n                type=\"text\"\n                name=\"errorTitle\"\n                bind:value={errorTitle}\n                placeholder=\"エラータイトルを入力\"\n                autofocus\n            />\n            <textarea\n                id=\"error-source-code\"\n                class=\"post-input post-text\"\n                name=\"error-source-code\"\n                bind:value={errorSourceCode}\n                placeholder=\"エラーのソースを入力\"\n            />\n            <textarea\n                id=\"error-solution-code\"\n                class=\"post-input post-text\"\n                name=\"error-solution-code\"\n                bind:value={errorSolutionCode}\n                placeholder=\"解決用のコードを入力\"\n            />\n            <input\n                id=\"error-lang\"\n                class=\"post-input\"\n                type=\"text\"\n                name=\"error-lang\"\n                bind:value={lang}\n                placeholder=\"言語を入力\"\n            />\n            <!-- <button>保存する</button> -->\n            <button\n                id=\"error-save-btn\"\n                type=\"submit\"\n                disabled={isSubmitting}\n            >\n            保存する\n            </button>\n        </form>\n    </div>\n</div>\n\n<style>\n    .post-input {\n        margin-bottom: 1rem;\n    }\n    .post-text {\n        height: 200px;\n    }\n    button:disabled {\n        background: #ddd;\n    }\n</style>\n",
    "<script lang=\"ts\">import PageTitle from \"../ui/PageTitle.svelte\";\r\nexport let toCreate;\r\nexport let toShow;\r\n</script>\n\n<div>\n    <PageTitle title={\"エラー検索\"} />\n    <div class=\"search-input\">\n        <!-- svelte-ignore a11y-autofocus -->\n        <input type=\"text\" placeholder=\"errorを入力\" autofocus />\n    </div>\n    <div class=\"sidebar-btn\">\n        <button on:click={toShow}> 一覧を表示 </button>\n    </div>\n    <div class=\"sidebar-btn\">\n        <button on:click={toCreate}> エラーポストを作成 </button>\n    </div>\n</div>\n\n<style>\n    .search-input {\n        margin-top: 1rem;\n        margin-bottom: 2rem;\n    }\n    .sidebar-btn {\n        margin-bottom: 1rem;\n    }\n</style>\n",
    "<script lang=\"ts\">export let title;\r\n</script>\n\n<div class=\"title-box\">\n    <h1>{title}</h1>\n    <hr />\n</div>\n\n<style>\n    .title-box {\n        margin-top: 1rem;\n        margin-bottom: 2rem;\n    }\n</style>\n"
  ],
  "names": [],
  "mappings": "AA4HI,WAAW,eAAC,CAAC,AACT,aAAa,CAAE,IAAI,AACvB,CAAC,AACD,UAAU,eAAC,CAAC,AACR,MAAM,CAAE,KAAK,AACjB,CAAC,AACD,qBAAM,SAAS,AAAC,CAAC,AACb,UAAU,CAAE,IAAI,AACpB,CAAC;AChHD,aAAa,eAAC,CAAC,AACX,UAAU,CAAE,IAAI,CAChB,aAAa,CAAE,IAAI,AACvB,CAAC,AACD,YAAY,eAAC,CAAC,AACV,aAAa,CAAE,IAAI,AACvB,CAAC;ACjBD,UAAU,cAAC,CAAC,AACR,UAAU,CAAE,IAAI,CAChB,aAAa,CAAE,IAAI,AACvB,CAAC"
}